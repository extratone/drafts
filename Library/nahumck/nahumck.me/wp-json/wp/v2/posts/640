{"id":640,"date":"2016-05-29T18:05:20","date_gmt":"2016-05-29T22:05:20","guid":{"rendered":"https:\/\/nahumck.me\/?p=640"},"modified":"2020-06-06T11:15:57","modified_gmt":"2020-06-06T15:15:57","slug":"automated-tables","status":"publish","type":"post","link":"https:\/\/nahumck.me\/automated-tables\/","title":{"rendered":"Automated Tables"},"content":{"rendered":"<p>When I write most anything, I&#8217;m writing in <a href=\"http:\/\/fletcherpenney.net\/multimarkdown\/\">MultiMarkdown<\/a>. It&#8217;s a &#8220;superset&#8221; of <a href=\"http:\/\/daringfireball.net\/projects\/markdown\/\">Markdown<\/a>, giving you more options to create text formatting with ease: features like tables, <a href=\"https:\/\/nahumck.me\/named-identifiers\">footnotes<\/a>, and citations are simple to create, but can greatly enhance your writing. The use of tables is a feature that I don&#8217;t often use, but probably should. There are many times that I would like to use a table, but I often get the setup wrong and just give up, very frustrated.<\/p>\n<p><!--more--><\/p>\n<p>(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b<\/p>\n<p>The other day, there was a question posed in the Drafts channel in the AgileTortoise Slack group:<a href=\"#fn-1\" id=\"fnref-1\" title=\"see footnote\" class=\"footnote\">[1]<\/a><\/p>\n<blockquote><p>\nI&#8217;d like to make an action to create a Markdown table that asks how many columns you want and then asks what to call each column (based one the number of columns you requested). Is this possible?\n<\/p><\/blockquote>\n<p>I thought about this for a little bit, and figured out that while <a href=\"https:\/\/geo.itunes.apple.com\/us\/app\/drafts-4-quickly-capture-notes\/id905337691?at=1001l4VZ&amp;ct=nahumck_me\">Drafts<\/a> would be capable of this with JavaScript (in a way), I could easily solve this with <a href=\"https:\/\/geo.itunes.apple.com\/us\/app\/workflow-powerful-automation\/id915249334?at=1001l4VZ&amp;ct=nahumck_me\">Workflow<\/a>.<\/p>\n<h3>Table Format in MultiMarkdown<\/h3>\n<p>If you aren&#8217;t familiar with creating tables in MultiMarkdown, I highly recommend that you review the <a href=\"https:\/\/rawgit.com\/fletcher\/human-markdown-reference\/master\/index.html\">Syntax Cheat Sheet<\/a>. There are some helpful format tips for tables and more, which I will let you figure out on your own.<a href=\"#fn-2\" id=\"fnref-2\" title=\"see footnote\" class=\"footnote\">[2]<\/a><\/p>\n<table>\n<caption id=\"exampletable\" style=\"text-align:center\"><string>Example Table<\/strong><\/caption>\n<colgroup>\n<col style=\"text-align:left;\"\/>\n<col style=\"text-align:center;\"\/>\n<col style=\"text-align:right;\"\/>\n<\/colgroup>\n<thead>\n<tr>\n<th style=\"text-align:left;\">First Header<\/th>\n<th style=\"text-align:center;\">Second Header<\/th>\n<th style=\"text-align:right;\">Third Header<\/th>\n<\/tr>\n<\/thead>\n<tbody>\n<tr>\n<td style=\"text-align:left;\">Content<\/td>\n<td style=\"text-align:center;\" colspan=\"2\"><em>Long Cell<\/em><\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\">Content<\/td>\n<td style=\"text-align:center;\"><strong>Cell<\/strong><\/td>\n<td style=\"text-align:right;\">Cell<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\">New section<\/td>\n<td style=\"text-align:center;\">More<\/td>\n<td style=\"text-align:right;\">Data<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>The table consists of three areas: the header, separator line, and rows. While the number of columns and rows are user determined, the number of separators must match the number of columns. <\/p>\n<p>One thing that I did learn when coming up with the workflow was how to use the syntax to align the text of the column. By using a colon, you can choose right, left, or center; if you don&#8217;t use them, then it chooses default based on your language (e.g. English is a left default). Here is a helpful table that covers how to align the text using the heading separator line:<a href=\"#fn-3\" id=\"fnref-3\" title=\"see footnote\" class=\"footnote\">[3]<\/a><\/p>\n<table>\n<colgroup>\n<col style=\"text-align:center;\"\/>\n<col style=\"text-align:center;\"\/>\n<\/colgroup>\n<thead>\n<tr>\n<th style=\"text-align:center;\">Position<\/th>\n<th style=\"text-align:center;\">Syntax<\/th>\n<\/tr>\n<\/thead>\n<tbody>\n<tr>\n<td style=\"text-align:center;\">Default<\/td>\n<td style=\"text-align:center;\"><code>|----|<\/code><\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:center;\">Left<\/td>\n<td style=\"text-align:center;\"><code>|:----|<\/code><\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:center;\">Center<\/td>\n<td style=\"text-align:center;\"><code>|:----:|<\/code><\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:center;\">Right<\/td>\n<td style=\"text-align:center;\"><code>|----:|<\/code><\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>With this formatting in mind, I can create the workflow. <\/p>\n<h3>Workflow + Drafts Action<\/h3>\n<p>I started off by writing a draft with the logical steps I would need to make:<\/p>\n<ol>\n<li>Get the UUID of the current draft<\/li>\n<li>Ask for the number of columns<\/li>\n<li>Ask for the name for each heading<\/li>\n<li>Set the separator line<\/li>\n<li>Ask for the number of blank rows<\/li>\n<li>Export the table to the current draft<\/li>\n<\/ol>\n<p>Originally, I had a much more complex workflow with less flexibility. But after a bit of time thinking about it, I had a bit of a breakthrough, and cut the steps down by a third. By iterating both the heading and separators in the repeat step, I don&#8217;t need to have a special block that creates the separators and merges them together. I also can set the text alignment of each column as I iterate in the repeat step, which I couldn&#8217;t do before. Here is the workflow:<\/p>\n<p><a href=\"https:\/\/workflow.is\/workflows\/a517823a13db47cbab8cad18530a472d\">Markdown Table Workflow<\/a><\/p>\n<p>The Drafts action is pretty easy to create. First, I added an action step to copy the UUID of the draft to the clipboard using the <code>[[uuid]]<\/code> tag. The next step, I use a Run Workflow action step using the name of the workflow &#8220;Markdown Table&#8221; as the input. Here is the action for the above workflow:<\/p>\n<p><a href=\"https:\/\/drafts4-actions.agiletortoise.com\/a\/1nG\">Markdown Table Drafts Action<\/a><\/p>\n<p>What if you don&#8217;t use Drafts?<a href=\"#fn-4\" id=\"fnref-4\" title=\"see footnote\" class=\"footnote\">[4]<\/a> I&#8217;ve also made a Markdown Table workflow that does not use Drafts as the output, but rather just uses the Share Sheet to send it to the app of choice.<\/p>\n<p><a href=\"https:\/\/workflow.is\/workflows\/48fc147590c94a26905a6264782f7ab0\">Share Markdown Table<\/a><\/p>\n<h3>Drafts Key<\/h3>\n<p>If you don&#8217;t have Workflow or don&#8217;t want to mess with it, there is another way. <a href=\"https:\/\/www.twitter.com\/cpaconnelly\">Ciaran Connelly<\/a> made an action key to take a list and convert it into a <a href=\"https:\/\/drafts4-actions.agiletortoise.com\/k\/1nB\">markdown table<\/a>. This takes a list in separate lines and creates the table based on the selection, then leaves you with a starting pipe to fill in the rows.<\/p>\n<p>One clever addition is the inclusion of allowing for the text position by using a text shortcut at the end of the line to position the text. Adding a column to the position table from before, this is what the key will search for on each line:<\/p>\n<table>\n<colgroup>\n<col style=\"text-align:center;\"\/>\n<col style=\"text-align:center;\"\/>\n<col style=\"text-align:center;\"\/>\n<\/colgroup>\n<thead>\n<tr>\n<th style=\"text-align:center;\">Shortcut<\/th>\n<th style=\"text-align:center;\">Position<\/th>\n<th style=\"text-align:center;\">Syntax<\/th>\n<\/tr>\n<\/thead>\n<tbody>\n<tr>\n<td style=\"text-align:center;\">,l<\/td>\n<td style=\"text-align:center;\">Left<\/td>\n<td style=\"text-align:center;\"><code>:----<\/code><\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:center;\">,c<\/td>\n<td style=\"text-align:center;\">Center<\/td>\n<td style=\"text-align:center;\"><code>:----:<\/code><\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:center;\">,r<\/td>\n<td style=\"text-align:center;\">Right<\/td>\n<td style=\"text-align:center;\"><code>----:<\/code><\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>If there isn&#8217;t anything at the end of the line, then it defaults to the left alignment. This works phenomenally well, and is a really well done key. He&#8217;s also made a <a href=\"https:\/\/drafts4-actions.agiletortoise.com\/k\/1mt\">table cleanup key<\/a>; this works only for people that use a fixed-width font like Courier so that the table looks good in plain text too.<\/p>\n<figure>\n<img src=\"https:\/\/i1.wp.com\/nahumck.me\/wp-content\/uploads\/2016\/05\/Drafts-Table-Keys.png?w=1100&#038;ssl=1\" alt=\"\" data-recalc-dims=\"1\" \/><br \/>\n<\/figure>\n<p>Cheers to Ciaran for creating these and showing his JavaScript magic.<\/p>\n<h3>Using Tables<\/h3>\n<p>Now that the ability to create tables is made easier, what should use use tables for in your life?<\/p>\n<p>One of the things that I have recently created is my &#8220;Recurring Charges.md&#8221; file. This is where I keep track of all the little subscription payments that we have as a family. This isn&#8217;t a list of bills (though I should probably create that in a table as well): this list is keeping track of my online subscriptions so that I can see what things cost me per month or per year, and avoid <a href=\"http:\/\/robmalanowski.com\/subscription-exhaustion.html\">subscription exhaustion<\/a>.<\/p>\n<table>\n<colgroup>\n<col style=\"text-align:left;\"\/>\n<col style=\"text-align:center;\"\/>\n<col style=\"text-align:center;\"\/>\n<\/colgroup>\n<thead>\n<tr>\n<th style=\"text-align:left;\">Name of Charge<\/th>\n<th style=\"text-align:center;\">$ \/ Mo<\/th>\n<th style=\"text-align:center;\">$ \/ Yr<\/th>\n<\/tr>\n<\/thead>\n<tbody>\n<tr>\n<td style=\"text-align:left;\">Dropbox<\/td>\n<td style=\"text-align:center;\">&#8211;<\/td>\n<td style=\"text-align:center;\">$99<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\">DreamHost<\/td>\n<td style=\"text-align:center;\">$8<\/td>\n<td style=\"text-align:center;\">$96<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\">SSL Cert<\/td>\n<td style=\"text-align:center;\">&#8211;<\/td>\n<td style=\"text-align:center;\">$15<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\">Netflix<\/td>\n<td style=\"text-align:center;\">$12<\/td>\n<td style=\"text-align:center;\">$144<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\">Hulu<\/td>\n<td style=\"text-align:center;\">$8<\/td>\n<td style=\"text-align:center;\">$96<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\">Amazon Prime<\/td>\n<td style=\"text-align:center;\">&#8211;<\/td>\n<td style=\"text-align:center;\">$99<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\">Apple Music<\/td>\n<td style=\"text-align:center;\">$15<\/td>\n<td style=\"text-align:center;\">$180<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\">iTunes Match<\/td>\n<td style=\"text-align:center;\">&#8211;<\/td>\n<td style=\"text-align:center;\">$25<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\">iCloud Storage<\/td>\n<td style=\"text-align:center;\">$1<\/td>\n<td style=\"text-align:center;\">$12<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\">Club MacStories<\/td>\n<td style=\"text-align:center;\">&#8211;<\/td>\n<td style=\"text-align:center;\">$50<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\">Totals<\/td>\n<td style=\"text-align:center;\">$68<\/td>\n<td style=\"text-align:center;\">$816<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>Thankfully, I haven&#8217;t gone too crazy with my subscriptions and I have room available for things that make sense to me. But it really helps me to visually see where the money is going.<\/p>\n<p>My hesitation with using tables in my journals, posts, or other writing was because of the way the formatting would work; and after researching this, I realize it was my fault for not looking into the syntax enough. Now that I have multiple ways of creating these tables in markdown, I think I&#8217;ll use them more often.<\/p>\n<p>\u252c\u2500\u252c\ufeff \ufe35 \u30ce( \u00b0\u203f\u00b0\u30ce)<\/p>\n<div class=\"footnotes\">\n<hr \/>\n<ol>\n<li id=\"fn-1\">\nThis group is for use by the users of the betas released by AgileTortoise. <a href=\"#fnref-1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;<\/a>\n<\/li>\n<li id=\"fn-2\">\nThere are too many to cover here.  <a href=\"#fnref-2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;<\/a>\n<\/li>\n<li id=\"fn-3\">\nbecause it would be wrong of me not to include a table in a post about creating tables, right? <a href=\"#fnref-3\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;<\/a>\n<\/li>\n<li id=\"fn-4\">\nIf you don&#8217;t use Drafts, I really don&#8217;t know what&#8217;s wrong with you. Have you seen my site? Seriously, get Drafts. It&#8217;s awesome.  <a href=\"#fnref-4\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;<\/a>\n<\/li>\n<\/ol>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>When I write most anything, I&#8217;m writing in MultiMarkdown. It&#8217;s a &#8220;superset&#8221; of Markdown, giving you more options to create text formatting with ease: features like tables, footnotes, and citations are simple to create, but can greatly enhance your writing. The use of tables is a feature that I don&#8217;t often use, but probably should. &hellip; <a href=\"https:\/\/nahumck.me\/automated-tables\/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">Automated Tables<\/span> <span class=\"meta-nav\">&rarr;<\/span><\/a><\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false,"jetpack_publicize_feature_enabled":true},"categories":[107],"tags":[41,28,29],"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/p6pMv7-ak","jetpack-related-posts":[{"id":1510,"url":"https:\/\/nahumck.me\/drafts-5-5-the-markdown-update\/","url_meta":{"origin":640,"position":0},"title":"Drafts 5.5 &#8211; The Markdown Update","date":"December 6, 2018","format":false,"excerpt":"The latest Drafts update brings some improvements with Markdown syntax. In addition to the standard Markdown (which has been simplified to represent the original Markdown specification), there are two additional syntax options: MultiMarkdown and GitHub Markdown. MultiMarkdown is a flavor which allows for footnotes, tables, citations, etc. GitHub Markdown is\u2026","rel":"","context":"In &quot;Apps&quot;","img":{"alt_text":"","src":"https:\/\/i0.wp.com\/nahumck.me\/wp-content\/uploads\/2018\/12\/66F0564C-FA17-4B7B-9E67-C694BC541FD7-1024x988.png?resize=350%2C200&ssl=1","width":350,"height":200},"classes":[]},{"id":517,"url":"https:\/\/nahumck.me\/using-drafts-as-a-main-text-editor\/","url_meta":{"origin":640,"position":1},"title":"Using Drafts As A Main Text Editor","date":"March 28, 2016","format":false,"excerpt":"Drafts \u2014 Where text starts on iOS. This has been the tag line for the app since its inception. Many people use this as their single place of text input and output, exporting ideas to other apps for a myriad of reasons. It supports writing styles like MultiMarkdown; it supports\u2026","rel":"","context":"In &quot;Apps&quot;","img":{"alt_text":"","src":"","width":0,"height":0},"classes":[]},{"id":823,"url":"https:\/\/nahumck.me\/something-different-something-new\/","url_meta":{"origin":640,"position":2},"title":"Something Different, Something New","date":"August 3, 2016","format":false,"excerpt":"I often can get stuck in my ways. I might find something I really like, and use it until it breaks. And then I'll go get the same thing to replace it. The exception is apps: I like trying things, even if I only end up back where I began.\u2026","rel":"","context":"In &quot;Stories&quot;","img":{"alt_text":"","src":"","width":0,"height":0},"classes":[]},{"id":2017,"url":"https:\/\/nahumck.me\/drafts-26-the-customization-update\/","url_meta":{"origin":640,"position":3},"title":"Drafts 26: The Customization Update","date":"March 23, 2021","format":false,"excerpt":"Back when I wrote about my wishlist for Drafts 5.0, I wanted to have a custom syntax for the editor in Drafts. At the time, this was based on my usage of other text editing apps, and I wanted a theme with a bit more color for MultiMarkdown. Now we\u2026","rel":"","context":"In &quot;Stories&quot;","img":{"alt_text":"","src":"","width":0,"height":0},"classes":[]},{"id":1549,"url":"https:\/\/nahumck.me\/drafts-5-6\/","url_meta":{"origin":640,"position":4},"title":"Drafts 5.6","date":"January 23, 2019","format":false,"excerpt":"Last week, Drafts released version 5.6. While it is not as big as some of the other releases before it, it does bring some important enhancements to the app. Adding Shortcuts It is now easier than ever to add a specific shortcut to run in Drafts. A new interface is\u2026","rel":"","context":"In &quot;Apps&quot;","img":{"alt_text":"","src":"https:\/\/i0.wp.com\/nahumck.me\/wp-content\/uploads\/2019\/01\/D56-Hero-1024x743.png?resize=350%2C200&ssl=1","width":350,"height":200},"classes":[]},{"id":701,"url":"https:\/\/nahumck.me\/lazy-markdown\/","url_meta":{"origin":640,"position":5},"title":"Lazy Markdown","date":"June 10, 2016","format":false,"excerpt":"No, this isn\u2019t a new fork of Markdown. This is just a better way of doing things. Jeff Mueller recently came up with a clever way to use Workflow to help pull in links after writing a post in Drafts. It\u2019s seriously a fantastic idea that I wish I had\u2026","rel":"","context":"In &quot;Linked&quot;","img":{"alt_text":"","src":"","width":0,"height":0},"classes":[]}],"jetpack_likes_enabled":false,"_links":{"self":[{"href":"https:\/\/nahumck.me\/wp-json\/wp\/v2\/posts\/640"}],"collection":[{"href":"https:\/\/nahumck.me\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/nahumck.me\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/nahumck.me\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/nahumck.me\/wp-json\/wp\/v2\/comments?post=640"}],"version-history":[{"count":7,"href":"https:\/\/nahumck.me\/wp-json\/wp\/v2\/posts\/640\/revisions"}],"predecessor-version":[{"id":647,"href":"https:\/\/nahumck.me\/wp-json\/wp\/v2\/posts\/640\/revisions\/647"}],"wp:attachment":[{"href":"https:\/\/nahumck.me\/wp-json\/wp\/v2\/media?parent=640"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/nahumck.me\/wp-json\/wp\/v2\/categories?post=640"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/nahumck.me\/wp-json\/wp\/v2\/tags?post=640"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}