# Tot Documentation (Aggregated) 	 	

**Welcome to Tot!**

Tot is a simple app that lets you *collect & edit* text.

Tot uses a single window to hold seven individual text documents. Simply
click on the colored dots at the top of the window to switch between
documents.

(If you're colorblind, make sure the "differentiate without color"
setting is turned on in Accessibility settings and the dots will be
numbered instead..)

*Click on the arrow below* to continue to the next section.

        Wow. I guess Tot _really_ **clicks** with you.


        Have you ever played Desert Bus?

**Use Tot for many tasks.**

Tot can be used for to-do lists, notes, brainstorming, and more. We've
used Tot to keep track of release notes, for doing research on new
projects, starting blog posts, creating this tutorial, and anything else
that requires typing without much friction.

The formatting is purposefully simple: there's only *italic* and
**bold** (with ⌘I and ⌘B keyboard shortcuts). The text is displayed in
just one font (which you can customize). With Tot, the most important
thing is the content, not how it looks. As you'll see in a bit, these
formatting limitations also provide powerful capabilities.

Keyboard shortcuts work just as you'd expect, even the more obscure ones
like ⌃A and ⌃E to move to the start and end of a paragraph.

*Click on the arrows* below to continue.

**Your text is saved automatically and synced to iCloud.**

*Everything* you enter is captured as soon as you stop typing and is
then available from the network. If you use more than one Mac, for
example at home and work, your notes are wherever you are! Even better,
there's an [app for iOS](https://tot.rocks) that lets you access
everything from your pocket!

Tot's text is easy to get at: the window appears any time you click on
the *Dock* icon. Use the keyboard to select a view with ⌘1 to ⌘7, then
⌘W or Escape when you're done. There's even a configurable keyboard
shortcut to display the window: your hands never have to leave the keys!

You *never* have to save, although you'll find that's a hard habit to
give up: ⌘S syncs immediately with visual feedback. If you need all or
part of your text in a file, use *Save As* in the *File* menu (or ⇧⌘S.)

# Plain Text

Tot also allows you to work with plain text. Click on the "a" icon at
the bottom of the window to toggle between the styled and plain views.
Like TextEdit, a ⇧⌘T works, too.

If you're familiar with
[Markdown](https://daringfireball.net/projects/markdown/syntax), Tot's
syntax will be familiar for things like **bold text** or adding
*emphasis*.

Tot is *not* a full Markdown editor, and never will be. It uses a subset
that's easy to understand and efficient at storing the popular features
of rich text. RTF and HTML are more expressive, but have unneeded
complexity for the simple tasks performed here.

Similarly, Tot isn't an image editor, yet you can do this:

                 (  )                  (oo)           .-------/ --- Tot
is udderly fantastic.          / \|     \|\|         \*  \|\|w---\|\|  
         \^\^    \^\^

Plain text is also where Tot's limited formatting starts to shine:
select some words and use ⌘I or ⌘B. Constraints can be powerful.

All great ideas start out messy. Unorganized text, links, references,
and general chaos on your desktop. If you've ever had dozens of Untitled
text windows littered about, you know the feeling.

**Tot is a great place to put your mess.**

As you're collecting text with abandon, Tot's limited formatting helps
keep the mess under control. A first step in getting things into a
presentable format.

Of course copy and paste works as expected, but there's a twist. Tot
converts text to match whichever mode you're in. If you copy styled text
that uses Comic Sans, the pasted text will be matched to your preferred
font for both rich and plain text. (Thank goodness!)

Additionally, Tot handles imported text intelligently by doing Markdown
conversion:

• In plain text mode, any rich text will be converted to its equivalent
in Markdown. If you copy "something **bold**" on a web page, it will end
up as "something \*\*bold\*\*" in the plain text.

• With rich text mode, the opposite happens. Any pasted text with
Markdown formatting will be styled using your selected font.

The same conversions happen during drag and drop with a refinement: text
is only converted when the file has a Markdown extension (.markdown,
.mdown, or .md). Tot also lets you to copy a file in the Finder and
paste the contents with ⌘V. All of these automatic conversions can be
circumvented with *Paste as Plain Text* in the *Edit* menu.

Tot's status bar lets you keep track of your work: it updates the text
statistics as you type or when a selection is made. There's also a ↑
icon that lets you share all or part of the text in a mail, message, or
tweet. When you don't need this stuff, it's easy to hide using the
*Window* menu or the ⌘/ shortcut.

**Make Tot your own.**

At the top-right of Tot's window there is a toggle for settings. Here
are some things that you can do to make the app fit your workflow:

*Use a menu bar icon with a detachable window:* With this setting, the
window is tucked away at the top of your screen, but you can drag it
away when needed.

The *Smart Icons* setting will show a Dock icon when you detach the
popover window from the menu bar: useful for folks who use Command-Tab
to switch windows. When there is no Dock icon, this is where you can
Quit the app.

*Appearance:* Tot looks great whether you prefer a dark or light
interface. And you'll either love or hate the colored background, so
make your choice!

*Set a system-wide hotkey:* This setting allows Tot to become a
keyboard-only app: the key combination you specify will bring up the
window and allow you to type or navigate with keyboard shortcuts.

In addition to the settings view, you can also configure Tot using the
menu bar:

*Style the text view:* The font for both rich and plain text can be
customized along with the size and tab spacing using *Format* in the
menu bar or from the context menu while you're editing text.

*Configure the text view:* Sometimes smart quotes are just what you
need, sometimes they screw up your code. Use the *Edit* \> *Substitions*
and *Spelling and Grammar* menus to tweak the text view to your needs.
Each dot has its own settings and they are synced to other devices.
(They are currently unused on iOS because there's no standard way to
modify the settings there.)

*Floating window:* When you're taking notes, it can be helpful to have
Tot's window above all others. Use *Window* \> *Display as Floating
Window* and the window will always be visible and ready to go!

And speaking of menus, if you find an item with a keyboard combo that
you don't like (switching tabs!), take a look at our [handy guide for
customizing
shortcuts](https://support.iconfactory.com/kb/tot/keyboard-shortcuts-in-tot).

**Tot loves links.**

Whether you're in plain text or rich text, Tot handles links
intelligently. If you drag a link from a web browser, you'll get the
page title and URL formatted as rich text or as Markdown inline link. In
plain text mode, it's easy to edit the parts individually; rich text
gives you a clickable link.

This conversion also happens if you copy and paste a block of text from
a web page: text and links are converted on the fly. If you're entering
URLs manually, they'll automatically be detected as you type.

Links aren't limited to just web pages. [Click here](dict://tot) to see
"tot" in the dictionary. Here are other useful examples:

<dict://CHOCK> \<x-bbedit://open?url=file:///etc/hosts\>
<facetime:18005551212> <tel:1-800-555-1212> <ssh://root@example.com>

Try dragging a message from Mail into Tot's window: you will get [a
link](https://daringfireball.net/2007/12/message_urls_leopard_mail)
that's a simple way to reference conversations and other information!

Finally, Tot has its own URL scheme that can automate tasks. It works
like this:

tot:// + *host* + *operation* + ? + *parameter*

The *host* is "1" to "7" and will open the numbered dot (left to right).
If you specify "empty", the first empty dot is selected. Use "settings"
and "help" to open their views.

The *operation* can be specified for dots; use "/prepend" to insert text
at the beginning, "/append" to add to the end, or "/replace" the entire
contents of dot. The *parameter* is "text" and a URL encoded string. For
example, \<tot://1/append?text=odds+%26+ends%0A\> will add some text to
the end of the first dot. To open the first dot from the Terminal, use
*open* and this URL:

\$ open tot://1

If you're using the scheme from an AppleScript, "/content" will return
the text from the selected dot. Try this:

\$ osascript -e 'tell application "Tot" to open location
"tot://6/content"'

There is no support for rich text in the URL scheme: use Markdown in
plain text to get formatting. If this functionality appeals to you, look
at [this shell
script](https://gist.github.com/chockenberry/d33ef5b6e6da4a3e4aa9b07b093d3c23).

*Created by* [Craig Hockenberry](https://twitter.com/chockenberry) and
[Gedeon Maheux](https://twitter.com/gedeon)

*Inspiration from* [Andre Torrez](https://twitter.com/torrez)

*Great ideas from* Luke Adamson, [Arik
Devens](https://twitter.com/danieltiger), [Brad
Ellis](https://twitter.com/BradEllis), [John
Gruber](https://twitter.com/gruber), [Sean
Heber](https://twitter.com/BigZaphod), [Daniel
Jalkut](https://twitter.com/danielpunkass), [Paul
Kafasis](https://pbones.com), [Casey
Liss](https://twitter.com/caseyliss), [Chris
Parrish](https://twitter.com/twenty3), [Anthony
Piraino](https://twitter.com/piraino), [Manton
Reece](https://micro.blog/manton), [Brent
Simmons](https://twitter.com/brentsimmons), [John
Siracusa](https://twitter.com/siracusa), [Ben
Thompson](https://twitter.com/benthompson), and [Talos
Tsui](https://twitter.com/talos). Even [John
Moltz](https://twitter.com/moltz) for being a muse.

Tot got its start with a simple goal: something like
[tyke](https://tyke.app/), but with multiple editors in a window that
could be dragged away from the menu bar.

Once that was working, I showed it to some friends and several asked for
rich text in addition to plain text. It occurred to me that using a
subset of Markdown could achieve that, and be pretty darn useful for the
kinds of things I did with Tot.

After a bunch of typing and sweating over design details, we now have a
tool that's indispensible. I hope you like it, too.

[This work was funded in part by Patreon supporters: join us for
wallpapers, icons, and more cool things like
Tot.](https://patreon.com/iconfactory)

*Stay in touch!* Our Twitter accounts and blog will get you the latest
news.

[@tot_app](https://twitter.com/tot_app)
[@iconfactory](https://twitter.com/iconfactory)
[blog.iconfactory.com](https://blog.iconfactory.com/)

**Welcome to Tot!**

Tot is a simple app that lets you *collect and edit* text.

There are seven editing views represented by the circles at the top of
this window. You're editing in the yellow (first) document right now.

The colors (or numbers) can help you remember what's in each view.

Click on the *orange (second) circle* in the toolbar to learn more.

**Tot is a great place to put your mess.**

Tot allows for basic formatting including bold and italics, and the
status at the bottom of the window lets you manage your text, as well as
toggle between styled and plain text.

iCloud syncing is built-in and changes to your text are saved
automatically. Say goodbye to all those Untitled text documents!

Go ahead and get started by editing in any dot, or check out our [full
tutorial](tot://help) under the Help menu.

**Tot can be used for lots of things!**

Make lists:

**WEEK AHEAD**

• [Learn how to use Tot!](tot://help) • Call mom • Be kind to others

**GROCERIES**

• Taters • Whiskey

Or collect your thoughts:

✱ Is Emoji mankind's greatest invention? 💚💛🧡❤️💜💙 ✱ What makes ice
cubes cold? ✱ What the heck is a [Tot?](tot://help)

Click the *red (third) circle* to learn more.
